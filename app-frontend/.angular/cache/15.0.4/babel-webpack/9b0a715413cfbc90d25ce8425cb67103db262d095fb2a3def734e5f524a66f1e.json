{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction AppComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r1.entry);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, entry_r1.dueDate, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", entry_r1.priority, \"\");\n  }\n}\nexport class AppComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.title = 'app-frontend';\n    this.entries = [];\n    this.todoForm = this.formBuilder.group({\n      entry: '',\n      dueDate: '',\n      priority: ''\n    });\n    this.priorityFilter = this.formBuilder.group({\n      priority: ''\n    });\n    this.getAll();\n  }\n  getAll() {\n    this.http.get('http://localhost:8080/getAll').subscribe(data => {\n      console.log(data);\n      this.entries = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSubmit() {\n    this.http.post('http://localhost:8080/add', this.todoForm.value).subscribe(data => {\n      console.log(data);\n      this.getAll();\n    }, error => {\n      console.log(error);\n    });\n  }\n  filter() {\n    this.entries = []; //this.entries.filter(entry=> entry.priority==this.priorityFilter.value.priority);\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 35,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"type\", \"text\", \"formControlName\", \"priority\"], [\"type\", \"submit\", 1, \"button\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"entry\"], [\"id\", \"entry\", \"type\", \"text\", \"formControlName\", \"entry\"], [\"for\", \"dueDate\"], [\"id\", \"dueDate\", \"type\", \"date\", \"formControlName\", \"dueDate\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" TODO: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.filter();\n      });\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \" priority: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \"filter\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"table\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"entry\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"due date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"priority\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, AppComponent_tr_17_Template, 8, 6, \"tr\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_19_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(20, \"td\")(21, \"label\", 5);\n      i0.ɵɵtext(22, \" Entry: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"td\")(25, \"label\", 7);\n      i0.ɵɵtext(26, \" Date \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"td\")(29, \"label\", 1);\n      i0.ɵɵtext(30, \" Priority \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 3);\n      i0.ɵɵtext(33, \"add\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(34, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.priorityFilter);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.entries);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.todoForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterOutlet, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAWIA,0BAAkC;IAC5BA,YAAe;IAAAA,iBAAK;IAAAA,0BAAI;IAAAA,YAAgC;;IAAAA,iBAAK;IAACA,0BAAI;IAACA,YAAkB;IAAAA,iBAAK;;;;IAA1FA,eAAe;IAAfA,oCAAe;IAASA,eAAgC;IAAhCA,qEAAgC;IAAWA,eAAkB;IAAlBA,iDAAkB;;;ACJ/F,OAAM,MAAOC,YAAY;EAavBC,YAAoBC,IAAgB,EAC1BC,WAAwB;IADd,SAAI,GAAJD,IAAI;IACd,gBAAW,GAAXC,WAAW;IAbrB,UAAK,GAAG,cAAc;IACtB,YAAO,GAAU,EAAE;IAEnB,aAAQ,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MAChCC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAC;KACV,CAAC;IACF,mBAAc,GAAG,IAAI,CAACJ,WAAW,CAACC,KAAK,CAAC;MACtCG,QAAQ,EAAC;KACV,CAAC;IAIA,IAAI,CAACC,MAAM,EAAE;EACf;EACAA,MAAM;IACJ,IAAI,CAACN,IAAI,CAACO,GAAG,CAAU,8BAA8B,CAAC,CACnDC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,OAAO,GAACH,IAAI;IACnB,CAAC,EACDI,KAAK,IAAE;MACLH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAC,QAAQ;IACN,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,2BAA2B,EAAC,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,CAC5DT,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACH,MAAM,EAAE;IACf,CAAC,EACDO,KAAK,IAAE;MACLH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAK,MAAM;IACJ,IAAI,CAACN,OAAO,GAAC,EAAE,CAAC;EAClB;;;AAzCWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRzB1B,0BAAI;MAACA,uBAAM;MAAAA,iBAAK;MAChBA,+BAAyD;MAAtBA;QAAA,OAAY2B,YAAQ;MAAA,EAAC;MACtD3B,gCAAsB;MACpBA,2BACF;MAAAA,iBAAQ;MACRA,2BAA4D;MAC5DA,iCAAqC;MAAAA,sBAAM;MAAAA,iBAAS;MAEtDA,2BAAK;MAEOA,sBAAK;MAAAA,iBAAK;MAAAA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MAAAA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACpDA,6DAEK;MACPA,iBAAQ;MACNA,4BAAK;MAC0BA;QAAA,OAAY2B,cAAU;MAAA,EAAC;MAClD3B,2BAAI;MAEFA,yBACF;MAAAA,iBAAQ;MACRA,4BAAsD;MACtDA,iBAAK;MAELA,2BAAI;MAEAA,uBACF;MAAAA,iBAAQ;MACRA,4BAA0D;MAC5DA,iBAAK;MAELA,2BAAI;MAEAA,2BACF;MAAAA,iBAAQ;MACRA,4BAA4D;MAC9DA,iBAAK;MACLA,kCAAqC;MAAAA,oBAAG;MAAAA,iBAAS;MAIzDA,iCAA+B;;;MAxCzBA,eAA4B;MAA5BA,8CAA4B;MAURA,gBAAU;MAAVA,qCAAU;MAKxBA,eAAsB;MAAtBA,wCAAsB","names":["i0","AppComponent","constructor","http","formBuilder","group","entry","dueDate","priority","getAll","get","subscribe","data","console","log","entries","error","onSubmit","post","todoForm","value","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Home\\Documents\\Code\\JS\\scoot-frontend-takehome\\frontend-boilerplate-angular\\app-frontend\\src\\app\\app.component.html","D:\\Home\\Documents\\Code\\JS\\scoot-frontend-takehome\\frontend-boilerplate-angular\\app-frontend\\src\\app\\app.component.ts"],"sourcesContent":["<h1> TODO: </h1>\r\n<form [formGroup]=\"priorityFilter\" (ngSubmit)=\"filter()\">\r\n  <label for=\"priority\">\r\n    priority:\r\n  </label>\r\n  <input id=\"priority\" type=\"text\" formControlName=\"priority\">\r\n  <button class=\"button\" type=\"submit\">filter</button>\r\n  </form>\r\n<div>\r\n  <table>\r\n    <tr><th>entry</th><th>due date</th><th>priority</th></tr>\r\n    <tr *ngFor=\"let entry of entries\">\r\n      <td>{{entry.entry}}</td><td>{{entry.dueDate | date:'short'}}</td> <td> {{entry.priority}}</td>\r\n    </tr>\r\n  </table>\r\n    <div>\r\n      <form [formGroup]=\"todoForm\" (ngSubmit)=\"onSubmit()\">\r\n        <td>\r\n        <label for=\"entry\">\r\n          Entry:\r\n        </label>\r\n        <input id=\"entry\" type=\"text\" formControlName=\"entry\">\r\n        </td>\r\n\r\n        <td>\r\n          <label for=\"dueDate\">\r\n            Date\r\n          </label>\r\n          <input id=\"dueDate\" type=\"date\" formControlName=\"dueDate\">\r\n        </td>\r\n    \r\n        <td>\r\n          <label for=\"priority\">\r\n            Priority\r\n          </label>\r\n          <input id=\"priority\" type=\"text\" formControlName=\"priority\">\r\n        </td>\r\n        <button class=\"button\" type=\"submit\">add</button>\r\n      </form>\r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app-frontend';\r\n  entries:Entry[] =[];\r\n\r\n  todoForm = this.formBuilder.group({\r\n    entry: '',\r\n    dueDate: '',\r\n    priority:''\r\n  });\r\n  priorityFilter = this.formBuilder.group({\r\n    priority:''\r\n  });\r\n\r\n  constructor(private http: HttpClient,\r\n    private formBuilder: FormBuilder) {\r\n    this.getAll();\r\n  }\r\n  getAll(){\r\n    this.http.get<Entry[]>('http://localhost:8080/getAll')\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.entries=data;\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.http.post('http://localhost:8080/add',this.todoForm.value)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.getAll();\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  filter(): void{\r\n    this.entries=[];//this.entries.filter(entry=> entry.priority==this.priorityFilter.value.priority);\r\n  }\r\n\r\n}\r\n\r\ninterface Response {\r\n  value: string\r\n}\r\ninterface Entry {\r\n  id: string,\r\n  entry: string,\r\n  priority: string,\r\n  dueDate: string\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}